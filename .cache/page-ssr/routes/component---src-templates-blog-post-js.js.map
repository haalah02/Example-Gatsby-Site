{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":";;;;;;;;;;;;;;;;;;;AAA8B;AACQ;AAEH;AACM;AACN;AAEnC,MAAMK,gBAAgB,GAAGA,CAAC;EACxBC,IAAI,EAAE;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,IAAI;IAAEC,cAAc,EAAEC;EAAK,CAAC;EACpDC;AACF,CAAC,KAAK;EAAA,IAAAC,kBAAA;EACJ,MAAMC,SAAS,GAAG,EAAAD,kBAAA,GAAAJ,IAAI,CAACM,YAAY,cAAAF,kBAAA,uBAAjBA,kBAAA,CAAmBG,KAAK,KAAK,OAAM;EAErD,oBACEhB,gDAAA,CAACG,mEAAM;IAACS,QAAQ,EAAEA,QAAS;IAACI,KAAK,EAAEF;EAAU,gBAC3Cd,gDAAA;IACEkB,SAAS,EAAC,WAAW;IACrBC,SAAS;IACTC,QAAQ,EAAC;EAA2B,gBAEpCpB,gDAAA,8BACEA,gDAAA;IAAIqB,QAAQ,EAAC;EAAU,GAAEV,IAAI,CAACW,WAAW,CAACN,KAAU,CAAC,eACrDhB,gDAAA,YAAIW,IAAI,CAACW,WAAW,CAACC,IAAQ,CACvB,CAAC,eACTvB,gDAAA;IACEwB,uBAAuB,EAAE;MAAEC,MAAM,EAAEd,IAAI,CAACe;IAAK,CAAE;IAC/CL,QAAQ,EAAC;EAAa,CACvB,CAAC,eACFrB,gDAAA,WAAK,CAAC,eACNA,gDAAA,8BACEA,gDAAA,CAACE,gEAAG,MAAE,CACA,CACD,CAAC,eACVF,gDAAA;IAAKkB,SAAS,EAAC;EAAe,gBAC5BlB,gDAAA;IACE2B,KAAK,EAAE;MACLC,OAAO,EAAG,MAAK;MACfC,QAAQ,EAAG,MAAK;MAChBC,cAAc,EAAG,eAAc;MAC/BC,SAAS,EAAG,MAAK;MACjBC,OAAO,EAAE;IACX;EAAE,gBAEFhC,gDAAA,aACGO,QAAQ,iBACPP,gDAAA,CAACC,wCAAI;IAACgC,EAAE,EAAE1B,QAAQ,CAAC2B,MAAM,CAACC,IAAK;IAACC,GAAG,EAAC;EAAM,GAAC,SACvC,EAAC7B,QAAQ,CAACe,WAAW,CAACN,KACpB,CAEN,CAAC,eACLhB,gDAAA,aACGQ,IAAI,iBACHR,gDAAA,CAACC,wCAAI;IAACgC,EAAE,EAAEzB,IAAI,CAAC0B,MAAM,CAACC,IAAK;IAACC,GAAG,EAAC;EAAM,GACnC5B,IAAI,CAACc,WAAW,CAACN,KAAK,EAAC,SACpB,CAEN,CACF,CACD,CACC,CAAC;AAEb,CAAC;AAEM,MAAMqB,IAAI,GAAGA,CAAC;EAAE/B,IAAI,EAAE;IAAEI,cAAc,EAAEC;EAAK;AAAE,CAAC,KAAK;EAC1D,oBACEX,gDAAA,CAACI,gEAAG;IACFY,KAAK,EAAEL,IAAI,CAACW,WAAW,CAACN,KAAM;IAC9BsB,WAAW,EAAE3B,IAAI,CAACW,WAAW,CAACgB,WAAW,IAAI3B,IAAI,CAAC4B;EAAQ,CAC3D,CAAC;AAEN,CAAC;AAED,iEAAelC,gBAAgB;AAExB,MAAMmC,SAAS,eAsCrB","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","Link","Bio","Layout","Seo","BlogPostTemplate","data","previous","next","site","markdownRemark","post","location","_site$siteMetadata","siteTitle","siteMetadata","title","createElement","className","itemScope","itemType","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","Head","description","excerpt","pageQuery"],"sourceRoot":""}